/*******************************************************************************
 * Copyright (c) 2000, 2017 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution and
 * is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 *******************************************************************************/

/*
 *  Do not edit this file 
 *  Generated by TraceGen
 */
#ifndef UTE_J9JIT_MODULE_HEADER
#define UTE_J9JIT_MODULE_HEADER
#include "ute_module.h"
#if !defined(UT_DIRECT_TRACE_REGISTRATION)
#include "jni.h"
#endif /* !defined(UT_DIRECT_TRACE_REGISTRATION) */
#ifndef UT_TRACE_OVERHEAD
#define UT_TRACE_OVERHEAD 1
#endif
#ifndef UT_THREAD
#define UT_THREAD(thr) (void *)thr
#endif /* UT_THREAD */
#ifndef UT_STR
#define UT_STR(arg) #arg
#endif
#ifdef __cplusplus
extern "C" {
#endif

#ifdef __clang__
#include <unistd.h>
#define Trace_Unreachable() _exit(-1)
#else
#define Trace_Unreachable()
#endif

#if defined(UT_DIRECT_TRACE_REGISTRATION)
I_32 registerj9jitWithTrace(UtInterface * utIntf, UtModuleInfo* containerName);
I_32 deregisterj9jitWithTrace(UtInterface * utIntf);
#define UT_MODULE_LOADED(utIntf) registerj9jitWithTrace((utIntf), NULL);
#define UT_MODULE_UNLOADED(utIntf) deregisterj9jitWithTrace((utIntf));
#define UT_J9JIT_MODULE_LOADED(utIntf) registerj9jitWithTrace((utIntf), NULL);
#define UT_J9JIT_MODULE_UNLOADED(utIntf) deregisterj9jitWithTrace((utIntf));
#else /* defined(UT_DIRECT_TRACE_REGISTRATION) */
I_32 registerj9jitWithTrace(JavaVM * vm, UtModuleInfo* containerName);
I_32 deregisterj9jitWithTrace(JavaVM * vm);
#define UT_MODULE_LOADED(vm) registerj9jitWithTrace((JavaVM *)(vm), NULL);
#define UT_MODULE_UNLOADED(vm) deregisterj9jitWithTrace((JavaVM *)(vm));
#define UT_J9JIT_MODULE_LOADED(vm) registerj9jitWithTrace((JavaVM *)(vm), NULL);
#define UT_J9JIT_MODULE_UNLOADED(vm) deregisterj9jitWithTrace((JavaVM *)(vm));
#endif /* defined(UT_DIRECT_TRACE_REGISTRATION) */

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_VMInitStages_Event1  (j9jit_UtActive[0] != 0)
#define Trc_JIT_VMInitStages_Event1(thr) do { /* tracepoint name: j9jit.0 */ \
	if ((unsigned char) j9jit_UtActive[0] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((0u << 8) | j9jit_UtActive[0]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_VMInitStages_Event1  (0)
#define Trc_JIT_VMInitStages_Event1(thr)   /* tracepoint name: j9jit.0 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_cacheFull  (j9jit_UtActive[1] != 0)
#define Trc_JIT_cacheFull(thr) do { /* tracepoint name: j9jit.1 */ \
	if ((unsigned char) j9jit_UtActive[1] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((1u << 8) | j9jit_UtActive[1]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_cacheFull  (0)
#define Trc_JIT_cacheFull(thr)   /* tracepoint name: j9jit.1 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_compileStart  (j9jit_UtActive[2] != 0)
#define Trc_JIT_compileStart(thr, P1, P2) do { /* tracepoint name: j9jit.2 */ \
	if ((unsigned char) j9jit_UtActive[2] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((2u << 8) | j9jit_UtActive[2]), "\377\377", P1, P2);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_compileStart  (0)
#define Trc_JIT_compileStart(thr, P1, P2)   /* tracepoint name: j9jit.2 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_compileEnd  (j9jit_UtActive[3] != 0)
#define Trc_JIT_compileEnd(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14) do { /* tracepoint name: j9jit.3 */ \
	if ((unsigned char) j9jit_UtActive[3] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((3u << 8) | j9jit_UtActive[3]), "\377\377\377\6\6\6\6\4\4\4\377\4\4\4", P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_compileEnd  (0)
#define Trc_JIT_compileEnd(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14)   /* tracepoint name: j9jit.3 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_outOfMemory  (j9jit_UtActive[4] != 0)
#define Trc_JIT_outOfMemory(thr) do { /* tracepoint name: j9jit.4 */ \
	if ((unsigned char) j9jit_UtActive[4] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((4u << 8) | j9jit_UtActive[4]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_outOfMemory  (0)
#define Trc_JIT_outOfMemory(thr)   /* tracepoint name: j9jit.4 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_compilationFailed  (j9jit_UtActive[5] != 0)
#define Trc_JIT_compilationFailed(thr, P1, P2) do { /* tracepoint name: j9jit.5 */ \
	if ((unsigned char) j9jit_UtActive[5] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((5u << 8) | j9jit_UtActive[5]), "\377\4", P1, P2);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_compilationFailed  (0)
#define Trc_JIT_compilationFailed(thr, P1, P2)   /* tracepoint name: j9jit.5 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_noAttemptToJit  (j9jit_UtActive[6] != 0)
#define Trc_JIT_noAttemptToJit(thr, P1) do { /* tracepoint name: j9jit.6 */ \
	if ((unsigned char) j9jit_UtActive[6] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((6u << 8) | j9jit_UtActive[6]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_noAttemptToJit  (0)
#define Trc_JIT_noAttemptToJit(thr, P1)   /* tracepoint name: j9jit.6 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_optimizationPhase  (j9jit_UtActive[7] != 0)
#define Trc_JIT_optimizationPhase(thr, P1) do { /* tracepoint name: j9jit.7 */ \
	if ((unsigned char) j9jit_UtActive[7] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((7u << 8) | j9jit_UtActive[7]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_optimizationPhase  (0)
#define Trc_JIT_optimizationPhase(thr, P1)   /* tracepoint name: j9jit.7 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_codeGeneratorPhase  (j9jit_UtActive[8] != 0)
#define Trc_JIT_codeGeneratorPhase(thr, P1) do { /* tracepoint name: j9jit.8 */ \
	if ((unsigned char) j9jit_UtActive[8] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((8u << 8) | j9jit_UtActive[8]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_codeGeneratorPhase  (0)
#define Trc_JIT_codeGeneratorPhase(thr, P1)   /* tracepoint name: j9jit.8 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_assumeFailure  (j9jit_UtActive[9] != 0)
#define Trc_JIT_assumeFailure(thr, P1, P2) do { /* tracepoint name: j9jit.9 */ \
	if ((unsigned char) j9jit_UtActive[9] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((9u << 8) | j9jit_UtActive[9]), "\4\377", P1, P2);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_assumeFailure  (0)
#define Trc_JIT_assumeFailure(thr, P1, P2)   /* tracepoint name: j9jit.9 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_startCompThreadFailed  (j9jit_UtActive[10] != 0)
#define Trc_JIT_startCompThreadFailed(thr) do { /* tracepoint name: j9jit.10 */ \
	if ((unsigned char) j9jit_UtActive[10] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((10u << 8) | j9jit_UtActive[10]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_startCompThreadFailed  (0)
#define Trc_JIT_startCompThreadFailed(thr)   /* tracepoint name: j9jit.10 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_recoverableCrash  (j9jit_UtActive[11] != 0)
#define Trc_JIT_recoverableCrash(thr, P1) do { /* tracepoint name: j9jit.11 */ \
	if ((unsigned char) j9jit_UtActive[11] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((11u << 8) | j9jit_UtActive[11]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_recoverableCrash  (0)
#define Trc_JIT_recoverableCrash(thr, P1)   /* tracepoint name: j9jit.11 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_fatalCrash  (j9jit_UtActive[12] != 0)
#define Trc_JIT_fatalCrash(thr, P1) do { /* tracepoint name: j9jit.12 */ \
	if ((unsigned char) j9jit_UtActive[12] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((12u << 8) | j9jit_UtActive[12]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_fatalCrash  (0)
#define Trc_JIT_fatalCrash(thr, P1)   /* tracepoint name: j9jit.12 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_Sampling  (j9jit_UtActive[13] != 0)
#define Trc_JIT_Sampling(thr, P1, P2, P3) do { /* tracepoint name: j9jit.13 */ \
	if ((unsigned char) j9jit_UtActive[13] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((13u << 8) | j9jit_UtActive[13]), "\377\377\4", P1, P2, P3);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_Sampling  (0)
#define Trc_JIT_Sampling(thr, P1, P2, P3)   /* tracepoint name: j9jit.13 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_Sampling_Detail  (j9jit_UtActive[14] != 0)
#define Trc_JIT_Sampling_Detail(thr, P1) do { /* tracepoint name: j9jit.14 */ \
	if ((unsigned char) j9jit_UtActive[14] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((14u << 8) | j9jit_UtActive[14]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_Sampling_Detail  (0)
#define Trc_JIT_Sampling_Detail(thr, P1)   /* tracepoint name: j9jit.14 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodSampleStart  (j9jit_UtActive[15] != 0)
#define Trc_JIT_MethodSampleStart(thr, P1, P2, P3) do { /* tracepoint name: j9jit.15 */ \
	if ((unsigned char) j9jit_UtActive[15] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((15u << 8) | j9jit_UtActive[15]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodSampleStart  (0)
#define Trc_JIT_MethodSampleStart(thr, P1, P2, P3)   /* tracepoint name: j9jit.15 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodSampleContinue  (j9jit_UtActive[16] != 0)
#define Trc_JIT_MethodSampleContinue(thr, P1, P2, P3) do { /* tracepoint name: j9jit.16 */ \
	if ((unsigned char) j9jit_UtActive[16] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((16u << 8) | j9jit_UtActive[16]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodSampleContinue  (0)
#define Trc_JIT_MethodSampleContinue(thr, P1, P2, P3)   /* tracepoint name: j9jit.16 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodSampleFail  (j9jit_UtActive[17] != 0)
#define Trc_JIT_MethodSampleFail(thr, P1) do { /* tracepoint name: j9jit.17 */ \
	if ((unsigned char) j9jit_UtActive[17] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((17u << 8) | j9jit_UtActive[17]), "\4", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodSampleFail  (0)
#define Trc_JIT_MethodSampleFail(thr, P1)   /* tracepoint name: j9jit.17 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_compileEndNew  (j9jit_UtActive[18] != 0)
#define Trc_JIT_compileEndNew(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16) do { /* tracepoint name: j9jit.18 */ \
	if ((unsigned char) j9jit_UtActive[18] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((18u << 8) | j9jit_UtActive[18]), "\377\377\377\6\6\6\6\4\4\4\377\4\4\4\6\6", P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_compileEndNew  (0)
#define Trc_JIT_compileEndNew(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16)   /* tracepoint name: j9jit.18 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Assert_JIT_unreachable() do { /* tracepoint name: j9jit.19 */ \
	if ((unsigned char) j9jit_UtActive[19] != 0){ \
		if ((0 /* unreachable */)) { /* assertion satisfied */ } else { \
			if (j9jit_UtModuleInfo.intf != NULL) { \
				j9jit_UtModuleInfo.intf->Trace((void *)NULL, &j9jit_UtModuleInfo, (UT_SPECIAL_ASSERTION | (19u << 8) | j9jit_UtActive[19]), "\377\4\377", __FILE__, __LINE__, UT_STR(((0 /* unreachable */)))); \
				Trace_Unreachable(); \
			} else { \
				fprintf(stderr, "** ASSERTION FAILED ** j9jit.19 at %s:%d Assert_JIT_unreachable%s\n", __FILE__, __LINE__, UT_STR(((0 /* unreachable */)))); \
			} \
		}} \
	} while(0)
#else
#define Assert_JIT_unreachable()   /* tracepoint name: j9jit.19 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodPrexInvalidated  (j9jit_UtActive[20] != 0)
#define Trc_JIT_MethodPrexInvalidated(thr, P1) do { /* tracepoint name: j9jit.20 */ \
	if ((unsigned char) j9jit_UtActive[20] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((20u << 8) | j9jit_UtActive[20]), "\6", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodPrexInvalidated  (0)
#define Trc_JIT_MethodPrexInvalidated(thr, P1)   /* tracepoint name: j9jit.20 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_IProfilerCapReached  (j9jit_UtActive[21] != 0)
#define Trc_JIT_IProfilerCapReached(thr, P1) do { /* tracepoint name: j9jit.21 */ \
	if ((unsigned char) j9jit_UtActive[21] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((21u << 8) | j9jit_UtActive[21]), "\4", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_IProfilerCapReached  (0)
#define Trc_JIT_IProfilerCapReached(thr, P1)   /* tracepoint name: j9jit.21 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_IncompatibleAOTHeader  (j9jit_UtActive[22] != 0)
#define Trc_JIT_IncompatibleAOTHeader(thr) do { /* tracepoint name: j9jit.22 */ \
	if ((unsigned char) j9jit_UtActive[22] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((22u << 8) | j9jit_UtActive[22]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_IncompatibleAOTHeader  (0)
#define Trc_JIT_IncompatibleAOTHeader(thr)   /* tracepoint name: j9jit.22 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_ManyCompFailures  (j9jit_UtActive[23] != 0)
#define Trc_JIT_ManyCompFailures(thr, P1) do { /* tracepoint name: j9jit.23 */ \
	if ((unsigned char) j9jit_UtActive[23] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((23u << 8) | j9jit_UtActive[23]), "\4", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_ManyCompFailures  (0)
#define Trc_JIT_ManyCompFailures(thr, P1)   /* tracepoint name: j9jit.23 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_LowUserVirtualMemory  (j9jit_UtActive[24] != 0)
#define Trc_JIT_LowUserVirtualMemory(thr, P1) do { /* tracepoint name: j9jit.24 */ \
	if ((unsigned char) j9jit_UtActive[24] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((24u << 8) | j9jit_UtActive[24]), "\4", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_LowUserVirtualMemory  (0)
#define Trc_JIT_LowUserVirtualMemory(thr, P1)   /* tracepoint name: j9jit.24 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_DisableJIT  (j9jit_UtActive[25] != 0)
#define Trc_JIT_DisableJIT(thr) do { /* tracepoint name: j9jit.25 */ \
	if ((unsigned char) j9jit_UtActive[25] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((25u << 8) | j9jit_UtActive[25]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_DisableJIT  (0)
#define Trc_JIT_DisableJIT(thr)   /* tracepoint name: j9jit.25 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_EnableJIT  (j9jit_UtActive[26] != 0)
#define Trc_JIT_EnableJIT(thr) do { /* tracepoint name: j9jit.26 */ \
	if ((unsigned char) j9jit_UtActive[26] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((26u << 8) | j9jit_UtActive[26]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_EnableJIT  (0)
#define Trc_JIT_EnableJIT(thr)   /* tracepoint name: j9jit.26 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_purgeMethodQueue  (j9jit_UtActive[27] != 0)
#define Trc_JIT_purgeMethodQueue(thr) do { /* tracepoint name: j9jit.27 */ \
	if ((unsigned char) j9jit_UtActive[27] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((27u << 8) | j9jit_UtActive[27]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_purgeMethodQueue  (0)
#define Trc_JIT_purgeMethodQueue(thr)   /* tracepoint name: j9jit.27 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_dataCacheFull  (j9jit_UtActive[28] != 0)
#define Trc_JIT_dataCacheFull(thr) do { /* tracepoint name: j9jit.28 */ \
	if ((unsigned char) j9jit_UtActive[28] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((28u << 8) | j9jit_UtActive[28]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_dataCacheFull  (0)
#define Trc_JIT_dataCacheFull(thr)   /* tracepoint name: j9jit.28 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define Trc_JIT_CodeCacheAllocated(P1, P2, P3) do { /* tracepoint name: j9jit.29 */ \
	if ((unsigned char) j9jit_UtActive[29] != 0){ \
		j9jit_UtModuleInfo.intf->Trace((void *)NULL, &j9jit_UtModuleInfo, ((29u << 8) | j9jit_UtActive[29]), "\6\6\6", P1, P2, P3);} \
	} while(0)
#else
#define Trc_JIT_CodeCacheAllocated(P1, P2, P3)   /* tracepoint name: j9jit.29 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_DumpStart  (j9jit_UtActive[30] != 0)
#define Trc_JIT_DumpStart(thr) do { /* tracepoint name: j9jit.30 */ \
	if ((unsigned char) j9jit_UtActive[30] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((30u << 8) | j9jit_UtActive[30]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_DumpStart  (0)
#define Trc_JIT_DumpStart(thr)   /* tracepoint name: j9jit.30 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_DumpCompilingMethod  (j9jit_UtActive[31] != 0)
#define Trc_JIT_DumpCompilingMethod(thr, P1, P2, P3) do { /* tracepoint name: j9jit.31 */ \
	if ((unsigned char) j9jit_UtActive[31] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((31u << 8) | j9jit_UtActive[31]), "\6\4\6", P1, P2, P3);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_DumpCompilingMethod  (0)
#define Trc_JIT_DumpCompilingMethod(thr, P1, P2, P3)   /* tracepoint name: j9jit.31 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_DumpWalkingFrame  (j9jit_UtActive[32] != 0)
#define Trc_JIT_DumpWalkingFrame(thr) do { /* tracepoint name: j9jit.32 */ \
	if ((unsigned char) j9jit_UtActive[32] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((32u << 8) | j9jit_UtActive[32]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_DumpWalkingFrame  (0)
#define Trc_JIT_DumpWalkingFrame(thr)   /* tracepoint name: j9jit.32 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_DumpFail  (j9jit_UtActive[33] != 0)
#define Trc_JIT_DumpFail(thr, P1) do { /* tracepoint name: j9jit.33 */ \
	if ((unsigned char) j9jit_UtActive[33] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((33u << 8) | j9jit_UtActive[33]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_DumpFail  (0)
#define Trc_JIT_DumpFail(thr, P1)   /* tracepoint name: j9jit.33 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_DumpRecursiveCrash  (j9jit_UtActive[34] != 0)
#define Trc_JIT_DumpRecursiveCrash(thr) do { /* tracepoint name: j9jit.34 */ \
	if ((unsigned char) j9jit_UtActive[34] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((34u << 8) | j9jit_UtActive[34]), NULL);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_DumpRecursiveCrash  (0)
#define Trc_JIT_DumpRecursiveCrash(thr)   /* tracepoint name: j9jit.34 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_TRC_JIT_getAvailableVirtualMemoryMBEnter  (j9jit_UtActive[35] != 0)
#define TRC_JIT_getAvailableVirtualMemoryMBEnter(thr) do { /* tracepoint name: j9jit.35 */ \
	if ((unsigned char) j9jit_UtActive[35] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((35u << 8) | j9jit_UtActive[35]), NULL);} \
	} while(0)
#else
#define TrcEnabled_TRC_JIT_getAvailableVirtualMemoryMBEnter  (0)
#define TRC_JIT_getAvailableVirtualMemoryMBEnter(thr)   /* tracepoint name: j9jit.35 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_TRC_JIT_getAvailableVirtualMemoryMBExit  (j9jit_UtActive[36] != 0)
#define TRC_JIT_getAvailableVirtualMemoryMBExit(thr) do { /* tracepoint name: j9jit.36 */ \
	if ((unsigned char) j9jit_UtActive[36] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((36u << 8) | j9jit_UtActive[36]), NULL);} \
	} while(0)
#else
#define TrcEnabled_TRC_JIT_getAvailableVirtualMemoryMBExit  (0)
#define TRC_JIT_getAvailableVirtualMemoryMBExit(thr)   /* tracepoint name: j9jit.36 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_TRC_JIT_ShutDownBegin  (j9jit_UtActive[37] != 0)
#define TRC_JIT_ShutDownBegin(thr) do { /* tracepoint name: j9jit.37 */ \
	if ((unsigned char) j9jit_UtActive[37] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((37u << 8) | j9jit_UtActive[37]), NULL);} \
	} while(0)
#else
#define TrcEnabled_TRC_JIT_ShutDownBegin  (0)
#define TRC_JIT_ShutDownBegin(thr)   /* tracepoint name: j9jit.37 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_TRC_JIT_ShutDownEnd  (j9jit_UtActive[38] != 0)
#define TRC_JIT_ShutDownEnd(thr, P1) do { /* tracepoint name: j9jit.38 */ \
	if ((unsigned char) j9jit_UtActive[38] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((38u << 8) | j9jit_UtActive[38]), "\377", P1);} \
	} while(0)
#else
#define TrcEnabled_TRC_JIT_ShutDownEnd  (0)
#define TRC_JIT_ShutDownEnd(thr, P1)   /* tracepoint name: j9jit.38 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodSampleStart1  (j9jit_UtActive[39] != 0)
#define Trc_JIT_MethodSampleStart1(thr, P1) do { /* tracepoint name: j9jit.39 */ \
	if ((unsigned char) j9jit_UtActive[39] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((39u << 8) | j9jit_UtActive[39]), "\6", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodSampleStart1  (0)
#define Trc_JIT_MethodSampleStart1(thr, P1)   /* tracepoint name: j9jit.39 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodSampleContinue2  (j9jit_UtActive[40] != 0)
#define Trc_JIT_MethodSampleContinue2(thr, P1, P2) do { /* tracepoint name: j9jit.40 */ \
	if ((unsigned char) j9jit_UtActive[40] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((40u << 8) | j9jit_UtActive[40]), "\6\6", P1, P2);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodSampleContinue2  (0)
#define Trc_JIT_MethodSampleContinue2(thr, P1, P2)   /* tracepoint name: j9jit.40 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_MethodSampleContinue1  (j9jit_UtActive[41] != 0)
#define Trc_JIT_MethodSampleContinue1(thr, P1) do { /* tracepoint name: j9jit.41 */ \
	if ((unsigned char) j9jit_UtActive[41] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((41u << 8) | j9jit_UtActive[41]), "\6", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_MethodSampleContinue1  (0)
#define Trc_JIT_MethodSampleContinue1(thr, P1)   /* tracepoint name: j9jit.41 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_CompCPU  (j9jit_UtActive[42] != 0)
#define Trc_JIT_CompCPU(thr, P1, P2) do { /* tracepoint name: j9jit.42 */ \
	if ((unsigned char) j9jit_UtActive[42] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((42u << 8) | j9jit_UtActive[42]), "\4\4", P1, P2);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_CompCPU  (0)
#define Trc_JIT_CompCPU(thr, P1, P2)   /* tracepoint name: j9jit.42 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_CompRequest  (j9jit_UtActive[43] != 0)
#define Trc_JIT_CompRequest(thr, P1, P2, P3, P4, P5, P6) do { /* tracepoint name: j9jit.43 */ \
	if ((unsigned char) j9jit_UtActive[43] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((43u << 8) | j9jit_UtActive[43]), "\6\6\4\4\4\4", P1, P2, P3, P4, P5, P6);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_CompRequest  (0)
#define Trc_JIT_CompRequest(thr, P1, P2, P3, P4, P5, P6)   /* tracepoint name: j9jit.43 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_compileEnd15  (j9jit_UtActive[44] != 0)
#define Trc_JIT_compileEnd15(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15) do { /* tracepoint name: j9jit.44 */ \
	if ((unsigned char) j9jit_UtActive[44] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((44u << 8) | j9jit_UtActive[44]), "\377\377\377\6\6\6\6\4\6\6\1\4\4\4\377", P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_compileEnd15  (0)
#define Trc_JIT_compileEnd15(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15)   /* tracepoint name: j9jit.44 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_AotLoadEnd  (j9jit_UtActive[45] != 0)
#define Trc_JIT_AotLoadEnd(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11) do { /* tracepoint name: j9jit.45 */ \
	if ((unsigned char) j9jit_UtActive[45] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((45u << 8) | j9jit_UtActive[45]), "\377\6\6\6\6\4\6\6\4\4\4", P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_AotLoadEnd  (0)
#define Trc_JIT_AotLoadEnd(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11)   /* tracepoint name: j9jit.45 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_OverallCompCPU  (j9jit_UtActive[46] != 0)
#define Trc_JIT_OverallCompCPU(thr, P1) do { /* tracepoint name: j9jit.46 */ \
	if ((unsigned char) j9jit_UtActive[46] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((46u << 8) | j9jit_UtActive[46]), "\4", P1);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_OverallCompCPU  (0)
#define Trc_JIT_OverallCompCPU(thr, P1)   /* tracepoint name: j9jit.46 */
#endif

#if UT_TRACE_OVERHEAD >= 1
#define TrcEnabled_Trc_JIT_SCCInfo  (j9jit_UtActive[47] != 0)
#define Trc_JIT_SCCInfo(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13) do { /* tracepoint name: j9jit.47 */ \
	if ((unsigned char) j9jit_UtActive[47] != 0){ \
		j9jit_UtModuleInfo.intf->Trace(UT_THREAD(thr), &j9jit_UtModuleInfo, ((47u << 8) | j9jit_UtActive[47]), "\377\377\4\4\4\4\4\4\4\4\4\4\4", P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13);} \
	} while(0)
#else
#define TrcEnabled_Trc_JIT_SCCInfo  (0)
#define Trc_JIT_SCCInfo(thr, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13)   /* tracepoint name: j9jit.47 */
#endif

extern UtModuleInfo j9jit_UtModuleInfo;
extern unsigned char j9jit_UtActive[];

#ifndef UT_MODULE_INFO
#define UT_MODULE_INFO j9jit_UtModuleInfo
#endif /* UT_MODULE_INFO */

#ifndef UT_ACTIVE
#define UT_ACTIVE j9jit_UtActive
#endif /* UT_ACTIVE */

#ifdef __cplusplus
} /* extern "C" */
#endif
#endif /* UTE_J9JIT_MODULE_HEADER */
/*
 * End of file
 */
